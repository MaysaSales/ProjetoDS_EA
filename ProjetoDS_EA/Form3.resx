<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wEaAmeRhQplvwAAAABJRU5ErkJggg==
</value>
  </data>
</root>